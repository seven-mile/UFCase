import "ImageViewModel.idl";
import "FeatureViewModel.idl";

namespace UFCase
{

    enum FeaturesPageViewModelState
    {
        Uninitialized,
        Idle,
        Loading,
    };

    [bindable]
    [default_interface]
    runtimeclass FeaturesPageViewModel : Microsoft.UI.Xaml.Data.INotifyPropertyChanged
    {
        FeaturesPageViewModel(ImageViewModel image);

        FeaturesPageViewModelState State{ get; };

        ImageViewModel Image{ get; };
        Windows.Foundation.Collections.IObservableVector<FeatureViewModel> RootFeatures{ get; };

        FeatureViewModel SelectedFeature;

        Windows.Foundation.IAsyncActionWithProgress<UInt32> PullData();

        Microsoft.UI.Xaml.Input.XamlUICommand FeatureEnableCommand{ get; };
        Microsoft.UI.Xaml.Input.XamlUICommand FeatureDisableCommand{ get; };
        Microsoft.UI.Xaml.Input.XamlUICommand FeatureOpenExplorerCommand{ get; };
        Microsoft.UI.Xaml.Input.XamlUICommand FeatureOpenRegistryCommand{ get; };
        Microsoft.UI.Xaml.Input.XamlUICommand FeatureGetPackageCommand{ get; };

        Microsoft.UI.Xaml.Input.XamlUICommand FeatureSystemUICommand{ get; };
        Microsoft.UI.Xaml.Input.XamlUICommand FeatureAddSourceUICommand{ get; };

        Microsoft.UI.Xaml.Input.XamlUICommand CommitCommand{ get; };
        Microsoft.UI.Xaml.Input.XamlUICommand RefreshCommand{ get; };

    }
}
